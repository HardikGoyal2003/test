name: PR Merge Comment

on:
  pull_request_target:
    types: [closed]

permissions: write-all

jobs:
  comment-on-merge:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Count merged PRs
        id: count-prs
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const author = context.payload.pull_request.user.login;
            const repo = context.repo.repo;
            const owner = context.repo.owner;

            const { data } = await github.rest.search.issuesAndPullRequests({
              q: `repo:${owner}/${repo} type:pr state:closed author:${author}`
            });
            const prCount = data.items.filter(pr => pr.pull_request.merged_at).length;

            return { prCount, author, repo, owner };

      - name: Set environment variables
        env:
          PR_COUNT: ${{ steps.count-prs.outputs.prCount }}
          AUTHOR: ${{ steps.count-prs.outputs.author }}
          REPO: ${{ steps.count-prs.outputs.repo }}
          OWNER: ${{ steps.count-prs.outputs.owner }}
        run: |
          echo "PR_COUNT=${PR_COUNT}" >> $GITHUB_ENV
          echo "AUTHOR=${AUTHOR}" >> $GITHUB_ENV
          echo "REPO=${REPO}" >> $GITHUB_ENV
          echo "OWNER=${OWNER}" >> $GITHUB_ENV

      - name: Comment on the PR
        uses: actions/github-script@v6
        env:
          PR_COUNT: ${{ env.PR_COUNT }}
          AUTHOR: ${{ env.AUTHOR }}
          REPO: ${{ env.REPO }}
          OWNER: ${{ env.OWNER }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prCount = parseInt(process.env.PR_COUNT);
          const author = process.env.AUTHOR;
          const mention = 'HardikGoyal2003';  // Update this if the mention needs to change
          const prNumber = context.payload.pull_request.number;

          let message;
          if (prCount === 1) {
            message = `Thanks @${author}, and congratulations on your first PR to Oppia! ðŸŽ‰ ðŸ¥³\n` +
            `Feel free to take up a second issue if you'd like to help out more!\n\n` +
            `Developer onboarding lead : @${mention}`;
          } else if (prCount === 2) {
            message = `@${author} Congratulations on your second merged PR to Oppia! ðŸŽ‰ ðŸ¥³\n` +
            `Since you've merged two PRs, you might be eligible to join the Oppia dev team as a collaborator. If you'd like to do that, please fill in [this form](https://forms.gle/NxPjimCMqsSTNUgu5). Thanks!\n\n` +
            `Developer onboarding lead : @${mention}`;
          }

          if (prCount === 1 || prCount === 2) {
            await github.rest.issues.createComment({
              owner: process.env.OWNER,
              repo: process.env.REPO,
              issue_number: prNumber,
              body: message
            });
